// Code generated by wsp, DO NOT EDIT.

package main

import (
	"net/http"
)
import "time"
import "feed/controller/user"
import "feed/filter"

func init() {
	http.HandleFunc("/user/register", func(w http.ResponseWriter, r *http.Request) {
		t := time.Now()
		_ = t
		var e interface{}
		c := new(user.UserControlller)
		defer func() {
			e = recover()
			if ok := filter.Boss(w, r, map[string]interface{}{"__T__": t, "__C__": c, "__E__": e, "__P__": "/user/register"}); !ok {
				return
			}
		}()
		c.AddUser(w, r)
	})

	http.HandleFunc("/user/login", func(w http.ResponseWriter, r *http.Request) {
		t := time.Now()
		_ = t
		var e interface{}
		c := new(user.UserControlller)
		defer func() {
			e = recover()
			if ok := filter.Boss(w, r, map[string]interface{}{"__T__": t, "__C__": c, "__E__": e, "__P__": "/user/login"}); !ok {
				return
			}
		}()
		c.Login(w, r)
	})

	http.HandleFunc("/user/update", func(w http.ResponseWriter, r *http.Request) {
		t := time.Now()
		_ = t
		var e interface{}
		c := new(user.UserControlller)
		defer func() {
			e = recover()
			if ok := filter.Boss(w, r, map[string]interface{}{"__T__": t, "__C__": c, "__E__": e, "__P__": "/user/update"}); !ok {
				return
			}
		}()

		c.Update(w, r)
	})
}